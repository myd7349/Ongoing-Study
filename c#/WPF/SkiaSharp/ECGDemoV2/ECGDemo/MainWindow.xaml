<Window x:Class="ECGDemo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ECGDemo"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:cmn="clr-namespace:Common;assembly=Common.DotNet"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="ECG Demo" Height="600" Width="800"
        WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <local:IntegerConverter x:Key="integerConverter" />
        <local:SpeedConverter x:Key="speedConverter" />
        <local:AmplitudeConverter x:Key="amplitudeConverter" />
        <local:TimeSpanConverter x:Key="timeSpanConverter" />
    </Window.Resources>

    <DockPanel>
        <ToolBarTray DockPanel.Dock="Top">
            <ToolBarTray.Resources>
                <Style TargetType="{x:Type Label}">
                    <Setter Property="VerticalAlignment" Value="Center" />
                </Style>
            </ToolBarTray.Resources>

            <ToolBar>
                <Button Width="30"
                        Command="{Binding StartOrStopCommand}">
                    <Image Source="{Binding ButtonImageUri}" />
                </Button>

                <Button Width="30"
                        x:Name="takeSnapshotButton_"
                        Click="takeSnapshotButton__Click">
                    <Image Source="Images/thumbnail.png" />
                </Button>

                <Label Content="Heart rate:" />
                <TextBox Text="{Binding HR}"
                         Width="80"
                         IsEnabled="{Binding IsNotBusy}" />

                <Label Content="Sample rate:" />
                <ComboBox Width="80"
                          IsEnabled="{Binding IsNotBusy}"
                          SelectedItem="{Binding SamplingRate}">
                    <ComboBox.ItemsSource>
                        <x:Array Type="{x:Type sys:Int32}">
                            <sys:Int32>1</sys:Int32>
                            <sys:Int32>2</sys:Int32>
                            <sys:Int32>4</sys:Int32>
                            <sys:Int32>5</sys:Int32>
                            <sys:Int32>10</sys:Int32>
                            <sys:Int32>20</sys:Int32>
                            <sys:Int32>50</sys:Int32>
                            <sys:Int32>100</sys:Int32>
                            <sys:Int32>200</sys:Int32>
                            <sys:Int32>300</sys:Int32>
                            <sys:Int32>500</sys:Int32>
                            <sys:Int32>600</sys:Int32>
                            <sys:Int32>800</sys:Int32>
                            <sys:Int32>1000</sys:Int32>
                            <sys:Int32>2000</sys:Int32>
                            <sys:Int32>4000</sys:Int32>
                            <sys:Int32>5000</sys:Int32>
                            <sys:Int32>8000</sys:Int32>
                            <sys:Int32>10000</sys:Int32>
                            <sys:Int32>16000</sys:Int32>
                        </x:Array>
                    </ComboBox.ItemsSource>
                </ComboBox>
            </ToolBar>

            <ToolBar>
                <Label Content="Speed:" />
                <ComboBox ItemsSource="{Binding Source={x:Static local:MainViewModel.SpeedArray}}"
                          SelectedItem="{Binding Speed, Converter={StaticResource speedConverter}}" 
                          Width="80" />

                <Label Content="Amplitude:" />
                <ComboBox ItemsSource="{Binding Source={x:Static local:MainViewModel.AmplitudeArray}}"
                          SelectedItem="{Binding Amplitude, Converter={StaticResource amplitudeConverter}}" 
                          Width="80" />
            </ToolBar>
        </ToolBarTray>

        <StatusBar DockPanel.Dock="Bottom">
            <TextBlock Text="DPI:" />
            <TextBlock x:Name="dpiTextBlock_" />

            <Separator />

            <TextBlock Text="Start time:" />
            <TextBlock Text="{Binding Source={x:Static sys:DateTime.Now}, Mode=OneWay,  StringFormat='yyyy-MM-dd HH:mm:ss'}" />

            <Separator />

            <TextBlock Text="System time:" />
            <TextBlock Text="{Binding TickTimer.Now, Mode=OneWay,  StringFormat='HH:mm:ss'}" />

            <Separator />

            <TextBlock Text="Elapsed:" />
            <TextBlock Text="{Binding TickTimer.ElapsedTime, Converter={StaticResource timeSpanConverter}, Mode=OneWay}" />

            <Separator />

            <TextBlock Text="Read data:" />
            <TextBlock x:Name="readDataTextBlock_" />

            <TextBlock Text="Draw wave:" />
            <TextBlock x:Name="drawWaveTextBlock_" />

            <Separator />

            <TextBlock Text="Last error:" />
            <TextBlock x:Name="lastErrorTextBlock_" />
        </StatusBar>

        <ToolBarTray DockPanel.Dock="Left" Orientation="Vertical">
            <ToolBar>
                <xctk:ColorPicker Width="24" Height="24"
                                  SelectedColor="{Binding WaveColor}"
                                  ShowDropDownButton="False"
                                  ToolTip="Wave color" />
                <xctk:ColorPicker Width="24" Height="24"
                                  SelectedColor="{Binding RefreshColor}"
                                  ShowDropDownButton="False"
                                  ToolTip="Refresh color" />
            </ToolBar>
        </ToolBarTray>

        <Grid>
            <Canvas Name="imageCanvas_"
                    Grid.Row="1"
                    SizeChanged="imageCanvas__SizeChanged">
                <Image Name="image_" Grid.Row="0" Stretch="None" />
            </Canvas>
        </Grid>
    </DockPanel>
    
    <!--
    References:
    -->
</Window>
